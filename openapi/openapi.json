{
  "openapi": "3.0.3",
  "info": {
    "title": "Mock API",
    "version": "1.0.0",
    "description": "Mock OpenAPI spec for QR API Service. All endpoints require API key authentication via 'Authorization: Bearer <token>' or 'x-api-key: <token>' headers."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://mock-server-hazel-tau.vercel.app",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "ApiKeyHeader": []
    }
  ],
  "tags": [
    { "name": "qr-exp-cgo-ext-availability-v1", "description": "Availability service" },
    { "name": "qr-exp-cgo-ext-booking-v1", "description": "Booking service" },
    { "name": "qr-exp-cgo-ext-flight-schedules-v1", "description": "Flight schedules service" },
    { "name": "qr-exp-cgo-shipments-v1", "description": "Shipments service" },
    { "name": "qr-exp-cgo-stock-v1", "description": "Stock service" },
    { "name": "qr-exp-cgo-tables-v1", "description": "Table data service" },
    { "name": "acs-awb-stock-v1", "description": "AWB Stock Management" },
    { "name": "acs-flight-schedules-v1", "description": "Flight Schedule and Capacity" },
    { "name": "acs-quotations-v1", "description": "Quotation and Booking" },
    { "name": "acs-asi-v1", "description": "Advanced Shipment Information" },
    { "name": "acs-truck-slots-v1", "description": "Truck Slot Management" },
    { "name": "acs-hawb-v1", "description": "HAWB/MAWB Management" },
    { "name": "acs-dangerous-goods-v1", "description": "Dangerous Goods Declaration" },
    { "name": "acs-cargo-acceptance-v1", "description": "Cargo Acceptance" },
    { "name": "acs-placi-v1", "description": "PLACI Management" },
    { "name": "acs-flight-manifest-v1", "description": "Flight Manifest" },
    { "name": "acs-status-updates-v1", "description": "Status Updates" },
    { "name": "acs-payments-v1", "description": "Payment Gateway" },
    { "name": "acs-digital-pouch-v1", "description": "Digital Pouch" }
  ],
  "paths": {
    "/api/status": {
      "get": {
  "tags": ["qr-exp-cgo-ext-availability-v1"],
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Service status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/availability": {
      "post": {
  "tags": ["qr-exp-cgo-ext-availability-v1"],
        "summary": "Availability and rate search (mock)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailabilityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Availability results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    }
    ,
    "/api/booking": {
      "post": {
  "tags": ["qr-exp-cgo-ext-booking-v1"],
        "summary": "Create booking (mock)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookingRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookingResponse" }
              }
            }
          },
          "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      },
      "delete": {
  "tags": ["qr-exp-cgo-ext-booking-v1"],
        "summary": "Cancel booking (mock)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CancellationRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cancellation result",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CancellationResponse" } } }
          },
          "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      }
    },
    "/api/flight-schedules/daily": {
      "post": {
  "tags": ["qr-exp-cgo-ext-flight-schedules-v1"],
        "summary": "Get daily flight schedules",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FlightSchedulesDailyRequest" } } }
        },
        "responses": {
          "200": {
            "description": "Daily schedules",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FlightSchedulesDailyResponse" } } }
          },
          "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      }
    },
    "/api/flight-schedules/weekly": {
      "post": {
  "tags": ["qr-exp-cgo-ext-flight-schedules-v1"],
        "summary": "Get weekly flight schedules",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FlightSchedulesWeeklyRequest" } } }
        },
        "responses": {
          "200": { "description": "Weekly routes", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FlightSchedulesWeeklyResponse" } } } },
          "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      }
    },
    "/api/shipment/fwb-capture": {
      "post": {
  "tags": ["qr-exp-cgo-shipments-v1"],
        "summary": "FWB capture",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FwbCaptureRequest" } } } },
        "responses": { "200": { "description": "FWB capture result", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FwbCaptureResponse" } } } },
        "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } } }
      }
    },
    "/api/shipment/track": {
      "post": {
  "tags": ["qr-exp-cgo-shipments-v1"],
        "summary": "Track shipment",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ShipmentTrackRequest" } } } },
        "responses": { "200": { "description": "Tracking result", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ShipmentTrackResponse" } } } },
        "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } } }
      }
    },
    "/api/stock": {
      "post": {
  "tags": ["qr-exp-cgo-stock-v1"],
        "summary": "Get next available stock",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StockRequest" } } } },
        "responses": { "200": { "description": "Stock response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StockResponse" } } } },
        "400": { "description": "Invalid request", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }}
      } 
    },
    "/api/awb-stock/request": {
      "post": {
        "tags": ["acs-awb-stock-v1"],
        "summary": "Request AWB Stock",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AWBStockRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AWB stock request created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AWBStockRequestResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/awb-stock/reply/{requestId}": {
      "put": {
        "tags": ["acs-awb-stock-v1"],
        "summary": "Reply to AWB Stock Request",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AWBStockReply" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AWB stock reply processed",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AWBStockReplyResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/flights/schedule": {
      "post": {
        "tags": ["acs-flight-schedules-v1"],
        "summary": "Submit Flight Schedule",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlightScheduleRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flight schedule submitted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlightScheduleResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/flights/{flightNumber}/capacity": {
      "get": {
        "tags": ["acs-flight-schedules-v1"],
        "summary": "Get Flight Capacity",
        "parameters": [
          {
            "name": "flightNumber",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "date",
            "in": "query",
            "schema": { "type": "string", "format": "date" }
          }
        ],
        "responses": {
          "200": {
            "description": "Flight capacity information",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlightCapacityResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/quotes/request": {
      "post": {
        "tags": ["acs-quotations-v1"],
        "summary": "Request Quote",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/QuoteRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quote generated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/QuoteResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/bookings": {
      "post": {
        "tags": ["acs-quotations-v1"],
        "summary": "Create Booking",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookingRequestACS" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookingResponseACS" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/asi": {
      "post": {
        "tags": ["acs-asi-v1"],
        "summary": "Send ASI",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ASISendRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ASI sent successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ASISendResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/truck-slots/request": {
      "post": {
        "tags": ["acs-truck-slots-v1"],
        "summary": "Request Truck Slot",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TruckSlotRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Truck slot requested",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TruckSlotResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/hawb": {
      "post": {
        "tags": ["acs-hawb-v1"],
        "summary": "Create HAWB",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/HAWBCreateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "HAWB created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HAWBCreateResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/dangerous-goods": {
      "post": {
        "tags": ["acs-dangerous-goods-v1"],
        "summary": "Submit e-DGD",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DangerousGoodsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dangerous goods declaration submitted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DangerousGoodsResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/cargo-acceptance": {
      "post": {
        "tags": ["acs-cargo-acceptance-v1"],
        "summary": "Submit Cargo Acceptance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CargoAcceptanceRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cargo acceptance submitted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CargoAcceptanceResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/placi": {
      "post": {
        "tags": ["acs-placi-v1"],
        "summary": "Submit PLACI",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PLACIRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PLACI submitted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PLACIResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/placi/{placiId}/risk-assessment": {
      "get": {
        "tags": ["acs-placi-v1"],
        "summary": "Get PLACI Risk Assessment",
        "parameters": [
          {
            "name": "placiId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Risk assessment results",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PLACIRiskAssessmentResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/flight-manifest": {
      "post": {
        "tags": ["acs-flight-manifest-v1"],
        "summary": "Submit Flight Manifest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FlightManifestRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Flight manifest submitted",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FlightManifestResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/status-updates": {
      "post": {
        "tags": ["acs-status-updates-v1"],
        "summary": "Send Status Update (FSU)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StatusUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status update sent",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusUpdateResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/payments": {
      "post": {
        "tags": ["acs-payments-v1"],
        "summary": "Process Payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment processed",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PaymentResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/digital-pouch": {
      "post": {
        "tags": ["acs-digital-pouch-v1"],
        "summary": "Create Digital Pouch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DigitalPouchRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Digital pouch created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DigitalPouchResponse" }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/flight-table": {
      "get": {
        "tags": ["qr-exp-cgo-tables-v1"],
        "summary": "Get flight table data",
        "responses": {
          "200": {
            "description": "Flight table data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightTableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/airway-bill-table": {
      "get": {
        "tags": ["qr-exp-cgo-tables-v1"],
        "summary": "Get airway bill table data",
        "responses": {
          "200": {
            "description": "Airway bill table data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirwayBillTableResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/report": {
      "get": {
        "tags": ["qr-exp-cgo-tables-v1"],
        "summary": "Get report data",
        "responses": {
          "200": {
            "description": "Report data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key authentication. Use 'Bearer <token>' or 'x-api-key' header."
      },
      "ApiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Alternative API key header."
      }
    },
    "schemas": {
      "StatusResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "apiName": { "type": "string" },
          "version": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" }
        },
        "required": ["success", "apiName", "version", "timestamp"]
      },
      "AvailabilityRequest": {
        "type": "object",
        "properties": {
          "origin": { "type": "string", "example": "CDG" },
          "destination": { "type": "string", "example": "BOM" },
          "routingPreference": {
            "type": "object",
            "properties": {
              "scheduledDepartureDate": { "type": "string", "example": "2025-09-20" }
            },
            "required": ["scheduledDepartureDate"]
          }
        },
        "required": ["origin", "destination", "routingPreference"]
      },
      "Rate": {
        "type": "object",
        "properties": {
          "currencyCode": { "type": "string" },
          "ratePerKilo": { "type": "number" },
          "chargeableWeight": { "type": "number" },
          "totalAmount": { "type": "number" }
        },
        "required": ["currencyCode", "ratePerKilo", "chargeableWeight", "totalAmount"]
      },
      "AvailabilityItem": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "carrier": { "type": "string" },
          "flightNumber": { "type": "string" },
          "origin": { "type": "string" },
          "destination": { "type": "string" },
          "departureDate": { "type": "string", "format": "date" },
          "availablePieces": { "type": "integer" },
          "availableWeight": { "type": "integer" },
          "rate": { "$ref": "#/components/schemas/Rate" }
        },
        "required": ["id", "carrier", "flightNumber", "origin", "destination", "departureDate", "rate"]
      },
      "AvailabilityResponse": {
        "type": "object",
        "properties": {
          "availabilityResponseSOs": { "type": "array", "items": { "$ref": "#/components/schemas/AvailabilityItem" } },
          "pagination": {
            "type": "object",
            "properties": {
              "total": { "type": "integer" },
              "page": { "type": "integer" },
              "limit": { "type": "integer" }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        }
      }
      ,
      "BookingRequest": {
        "type": "object",
        "properties": {
          "customerDetails": { "type": "object" },
          "documentDetails": { "type": "object" },
          "productCommodityDetails": { "type": "object" },
          "shipmentDimensions": { "type": "array", "items": { "type": "object" } },
          "shipmentQuantityDetails": { "type": "object" },
          "requestRefId": { "type": "string" },
          "requestType": { "type": "string" },
          "flightItineraries": { "type": "array", "items": { "type": "object" } },
          "source": { "type": "string" },
          "callBackURL": { "type": "string" }
        },
        "required": ["customerDetails", "documentDetails", "productCommodityDetails", "shipmentQuantityDetails", "requestRefId", "requestType", "flightItineraries"]
      },
      "BookingResponse": {
        "type": "object",
        "properties": {
          "shipmentReferenceNum": { "type": "string" },
          "currentBookingStatus": { "type": "string" },
          "bookingCaptured": { "type": "boolean" },
          "customerDetails": { "type": "object" },
          "documentDetails": { "type": "object" },
          "flightItineraries": { "type": "array", "items": { "type": "object" } },
          "productCommodityDetails": { "type": "object" },
          "shipmentDimensions": { "type": "array", "items": { "type": "object" } },
          "shipmentQuantityDetails": { "type": "object" },
          "source": { "type": "string" },
          "callBackURL": { "type": "string" },
          "additionalDetails": { "type": "object" },
          "rateDetails": { "type": "object" },
          "businessErrors": { "type": "array", "items": { "type": "object" } },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "CancellationRequest": {
        "type": "object",
        "properties": {
          "shipmentReferenceNum": { "type": "string" },
          "cancellationReason": { "type": "string" },
          "customerDetails": { "type": "object" },
          "documentDetails": { "type": "object" }
        }
      },
      "CancellationResponse": {
        "type": "object",
        "properties": {
          "documentDetails": { "type": "object" },
          "cancellationRmks": { "type": "string" },
          "cancellationStatus": { "type": "string" }
        }
      },
      "FlightSchedulesDailyRequest": {
        "type": "object",
        "properties": {
          "origin": { "type": "string" },
          "destination": { "type": "string" },
          "date": { "type": "string", "format": "date" },
          "filters": { "type": "object" }
        },
        "required": ["origin", "destination", "date"]
      },
      "FlightSchedulesDailyResponse": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "carrier": { "type": "string" },
                "flightNumber": { "type": "string" },
                "origin": { "type": "string" },
                "destination": { "type": "string" },
                "departureTime": { "type": "string" },
                "arrivalTime": { "type": "string" },
                "capacity": { "type": "object", "properties": { "availablePieces": { "type": "integer" }, "availableWeight": { "type": "number" } } }
              }
            }
          }
        }
      },
      "FlightSchedulesWeeklyRequest": {
        "type": "object",
        "properties": {
          "origin": { "type": "string" },
          "destination": { "type": "string" },
          "weekStartDate": { "type": "string", "format": "date" }
        },
        "required": ["origin", "destination", "weekStartDate"]
      },
      "FlightSchedulesWeeklyResponse": {
        "type": "object",
        "properties": {
          "routes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "carrier": { "type": "string" },
                "flightNumber": { "type": "string" },
                "daysOfWeek": { "type": "array", "items": { "type": "string" } },
                "origin": { "type": "string" },
                "destination": { "type": "string" }
              }
            }
          }
        }
      },
      "FwbCaptureRequest": {
        "type": "object",
        "properties": {
          "awbPrefix": { "type": "string" },
          "awbNumber": { "type": "string" },
          "shipment": { "type": "object" }
        },
        "required": ["awbPrefix", "awbNumber"]
      },
      "FwbCaptureResponse": {
        "type": "object",
        "properties": {
          "captureStatus": { "type": "string" },
          "awb": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "ShipmentTrackRequest": {
        "type": "object",
        "properties": {
          "cargoTrackingRequestSOs": { "type": "array", "items": { "type": "object" } }
        },
        "required": ["cargoTrackingRequestSOs"]
      },
      "ShipmentTrackResponse": {
        "type": "object",
        "properties": {
          "trackingResults": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "awb": { "type": "string" },
                "status": { "type": "string" },
                "events": { "type": "array", "items": { "type": "object" } }
              }
            }
          }
        }
      },
      "StockRequest": {
        "type": "object",
        "properties": {
          "customerDetails": { "type": "object" },
          "bookingRequestedCity": { "type": "string" }
        },
        "required": ["customerDetails", "bookingRequestedCity"]
      },
      "StockResponse": {
        "type": "object",
        "properties": {
          "stockAssignments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nextAvailableCity": { "type": "string" },
                "flightNumber": { "type": "string" },
                "availablePieces": { "type": "integer" },
                "availableWeight": { "type": "number" }
              }
            }
          }
        }
      },
      "Flight": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "flight": { "type": "string" },
          "date": { "type": "string", "format": "date" },
          "origin": { "type": "string" },
          "departureTime": { "type": "string" },
          "destination": { "type": "string" },
          "arrivalTime": { "type": "string" },
          "weight": { "type": "number" },
          "volume": { "type": "number" },
          "status": { "type": "string" },
          "baseRate": { "type": "number" },
          "outputRate": { "type": "number" },
          "tailNumber": { "type": "string" },
          "manufacturer": { "type": "string" },
          "aircraftType": { "type": "string" },
          "maxWeight": { "type": "number" },
          "maxVolume": { "type": "number" }
        },
        "required": ["id", "flight", "date", "origin", "departureTime", "destination", "arrivalTime", "weight", "volume", "status", "baseRate", "outputRate", "tailNumber", "manufacturer", "aircraftType", "maxWeight", "maxVolume"]
      },
      "FlightTableResponse": {
        "type": "object",
        "properties": {
          "flights": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Flight" }
          }
        }
      },
      "AirwayBill": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "awbNumber": { "type": "string" },
          "pieces": { "type": "integer" },
          "chargedWeight": { "type": "number" },
          "commodityCode": { "type": "string" },
          "specialHandling": { "type": "string", "nullable": true },
          "shipper": { "type": "string" },
          "consignee": { "type": "string", "nullable": true },
          "consigneeContact": {
            "type": "object",
            "nullable": true,
            "properties": {
              "email": { "type": "string" },
              "phone": { "type": "string" },
              "address": { "type": "string" }
            }
          },
          "natureOfGoods": { "type": "string" },
          "shipmentValue": { "type": "number" },
          "valuationCharges": { "type": "number" },
          "awbCharges": { "type": "number" },
          "ratePlan": { "type": "string" },
          "productType": { "type": "string" },
          "currency": { "type": "string" },
          "totalCharges": { "type": "number" },
          "attachments": { "type": "array", "items": { "type": "object" } },
          "activityLog": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": { "type": "string", "format": "date-time" },
                "action": { "type": "string" },
                "user": { "type": "string" }
              }
            }
          }
        },
        "required": ["id", "awbNumber", "pieces", "chargedWeight", "commodityCode", "shipper", "natureOfGoods", "shipmentValue", "valuationCharges", "awbCharges", "ratePlan", "productType", "currency", "totalCharges", "attachments", "activityLog"]
      },
      "AirwayBillTableResponse": {
        "type": "object",
        "properties": {
          "airwayBills": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AirwayBill" }
          }
        }
      },
      "Report": {
        "type": "object",
        "properties": {
          "period": {
            "type": "object",
            "properties": {
              "startDate": { "type": "string", "format": "date" },
              "endDate": { "type": "string", "format": "date" }
            }
          },
          "totalRevenue": { "type": "number" },
          "revenuePerKg": { "type": "number" },
          "totalFlights": { "type": "integer" },
          "volumeUtilization": { "type": "number" },
          "weightUtilization": { "type": "number" },
          "avgRevenuePerFlight": { "type": "number" },
          "avgLoadPerFlight": { "type": "number" },
          "lanePerformance": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "origin": { "type": "string" },
                "destination": { "type": "string" },
                "flights": { "type": "integer" },
                "totalWeight": { "type": "number" },
                "totalVolume": { "type": "number" },
                "totalRevenue": { "type": "number" },
                "avgWeightPerFlight": { "type": "number" },
                "avgVolumePerFlight": { "type": "number" },
                "avgRevenuePerFlight": { "type": "number" }
              }
            }
          },
          "bookingLeadTime": { "type": "number" },
          "flightOnTimePercentage": { "type": "number" },
          "delayCauses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cause": { "type": "string" },
                "percentage": { "type": "number" }
              }
            }
          },
          "topCommodityTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": { "type": "string" },
                "count": { "type": "integer" }
              }
            }
          },
          "topShippers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "shipper": { "type": "string" },
                "revenue": { "type": "number" }
              }
            }
          },
          "currency": { "type": "string" }
        },
        "required": ["period", "totalRevenue", "revenuePerKg", "totalFlights", "volumeUtilization", "weightUtilization", "avgRevenuePerFlight", "avgLoadPerFlight", "lanePerformance", "bookingLeadTime", "flightOnTimePercentage", "delayCauses", "topCommodityTypes", "topShippers", "currency"]
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "report": { "$ref": "#/components/schemas/Report" }
        }
      },
      "BookingRequestACS": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "Reference to the quotation",
            "example": "QUO-20250115-001"
          },
          "awbNumber": {
            "type": "string",
            "description": "Air Waybill number",
            "example": "020-12345001"
          },
          "flightDetails": {
            "type": "object",
            "properties": {
              "flightNumber": {
                "type": "string",
                "description": "Flight number",
                "example": "PK-751"
              },
              "date": {
                "type": "string",
                "format": "date",
                "description": "Flight date",
                "example": "2025-01-20"
              }
            },
            "required": ["flightNumber", "date"]
          },
          "validityDuration": {
            "type": "string",
            "description": "Booking validity duration",
            "example": "48 hours"
          }
        },
        "required": ["quoteId"]
      },
      "BookingResponseACS": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "string",
            "description": "Unique booking identifier",
            "example": "BKG-20250115-001"
          },
          "awbNumber": {
            "type": "string",
            "description": "Air Waybill number",
            "example": "020-12345001"
          },
          "status": {
            "type": "string",
            "description": "Booking status",
            "enum": ["CONFIRMED", "PENDING", "CANCELLED"],
            "example": "CONFIRMED"
          },
          "flightDetails": {
            "type": "object",
            "properties": {
              "flightNumber": {
                "type": "string",
                "description": "Flight number",
                "example": "PK-751"
              },
              "date": {
                "type": "string",
                "format": "date",
                "description": "Flight date",
                "example": "2025-01-20"
              },
              "departureTime": {
                "type": "string",
                "format": "date-time",
                "description": "Departure time",
                "example": "2025-01-20T10:30:00Z"
              }
            },
            "required": ["flightNumber", "date", "departureTime"]
          },
          "shipment": {
            "type": "object",
            "properties": {
              "origin": {
                "type": "string",
                "description": "Origin airport code",
                "example": "KHI"
              },
              "destination": {
                "type": "string",
                "description": "Destination airport code",
                "example": "LHR"
              },
              "pieces": {
                "type": "integer",
                "description": "Number of pieces",
                "example": 5
              },
              "weight": {
                "type": "number",
                "description": "Weight in kg",
                "example": 250.5
              },
              "commodity": {
                "type": "string",
                "description": "Commodity description",
                "example": "Electronics"
              }
            },
            "required": ["origin", "destination", "pieces", "weight", "commodity"]
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "description": "Booking validity end time",
            "example": "2025-01-22T10:30:00Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Booking creation timestamp",
            "example": "2025-01-15T17:00:00Z"
          },
          "quoteId": {
            "type": "string",
            "description": "Reference to the quotation",
            "example": "QUO-20250115-001"
          },
          "validityDuration": {
            "type": "string",
            "description": "Booking validity duration",
            "example": "48 hours"
          }
        },
        "required": ["bookingId", "awbNumber", "status", "flightDetails", "shipment", "validUntil", "createdAt"]
      }
    }
  }
}
